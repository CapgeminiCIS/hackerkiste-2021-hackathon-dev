name: 'Hackathon'
on: [push]

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    outputs:
      aks: ${{ steps.outputs.outputs.aks }}
      rg: ${{ steps.outputs.outputs.rg }}
      acr_name: ${{ steps.outputs.outputs.acr_name }}
      acr_url: ${{ steps.outputs.outputs.acr_url }}
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - uses: hashicorp/setup-terraform@v1

    - run: terraform init
    
    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color

    - name: Terraform Apply
      id: apply
      # if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve -no-color

    - name: Terraform Outputs
      id: outputs
      run: |
        rg=$(terraform output resource_group_name)
        aks=$(terraform output aks_name)
        acr_name=$(terraform output acr_name)
        acr_url=$(terraform output acr_url)
        echo "::set-output name=rg::${rg}"
        echo "::set-output name=aks::${aks}"
        echo "::set-output name=acr_name::${acr_name}"
        echo "::set-output name=acr_url::${acr_url}"

  container:
    name: 'Container Build'
    needs: terraform
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./container
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
            az acr login --name ${{ needs.terraform.outputs.acr_name }}

      - name: Build
        run: docker build -t ${{ needs.terraform.outputs.acr_url }}/nginx:latest .

      - name: Push
        run: docker push ${{ needs.terraform.outputs.acr_url }}/nginx:latest
  kubernetes:
    name: 'Kubernetes'
    needs: terraform
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./kubernetes
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Environemnt
        run: |
          az aks get-credentials --resource-group ${{ needs.terraform.outputs.rg }} --name ${{ needs.terraform.outputs.aks }}

      - uses: Azure/k8s-deploy@v1.4
        with:
          manifests: |
            deployment.yaml
            service.yaml
          images: |
            ${{ needs.terraform.outputs.acr_url }}/nginx:latest